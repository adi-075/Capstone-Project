'use client'

import { useState } from 'react'
import { Prompt } from './prompt'

interface Message {
    role: 'user' | 'assistant';
    content: string;
}

export default function NotesPage() {
    const [messages, setMessages] = useState<Message[]>([])

    return (
        <div className="relative h-screen flex flex-col bg-stone-100 dark:bg-[#0A1535]">
            <div className="flex-grow overflow-y-auto">
                {messages.length === 0 ? (
                    <div className="flex flex-col items-center justify-center h-full text-center text-stone-500 dark:text-[#AEB9E1]">
                        <h2 className="text-2xl font-medium mb-2">How can I help you today?</h2>
                        <p className="text-sm">Type a message or upload a file to get started.</p>
                    </div>
                ) : (
                    <div className="flex flex-col">
                        {messages.map((message, i) => (
                            <div
                                key={i}
                                className={`py-6 px-4 ${
                                    message.role === 'user' 
                                        ? 'bg-stone-100 dark:bg-[#0A1535]' 
                                        : 'bg-stone-50 dark:bg-[#0F1F4A]'
                                }`}
                            >
                                <div className="max-w-3xl mx-auto flex gap-4">
                                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                                        message.role === 'user' 
                                            ? 'bg-stone-700 dark:bg-[#1E3A8A]' 
                                            : 'bg-stone-600 dark:bg-[#2563EB]'
                                    }`}>
                                        {message.role === 'user' ? 'U' : 'A'}
                                    </div>
                                    <div className="flex-1 text-stone-950 dark:text-white/90">
                                        {message.content}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                )}
            </div>

            <Prompt
                onSubmit={(content) => {
                    if (!content.trim()) return
                    setMessages(prev => [
                        ...prev,
                        { role: 'user', content },
                        { role: 'assistant', content: 'This is a placeholder response. In a real implementation, this would be generated by an AI model.' }
                    ])
                }}
            />
        </div>
    )
}